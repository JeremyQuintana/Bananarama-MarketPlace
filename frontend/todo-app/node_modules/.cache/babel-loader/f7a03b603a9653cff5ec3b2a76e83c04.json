{"ast":null,"code":"var _jsxFileName = \"/home/blahblah/Desktop/as1/Bananarama/frontend/todo-app/other/src/components/todo/LoginComponent.jsx\";\nimport React, { Component } from 'react';\nimport AuthenticationService from './AuthenticationService.js';\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: 'sept',\n      password: '',\n      hasLoginFailed: false,\n      showSuccessMessage: false // this.handleUsernameChange = this.handleUsernameChange.bind(this)\n      // this.handlePasswordChange = this.handlePasswordChange.bind(this)\n\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.loginClicked = this.loginClicked.bind(this);\n  }\n\n  handleChange(event) {\n    //console.log(this.state);\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  } // handleUsernameChange(event) {\n  //     console.log(event.target.name);\n  //     this.setState(\n  //         {\n  //             [event.target.name]\n  //               :event.target.value\n  //         }\n  //     )\n  // }\n  // handlePasswordChange(event) {\n  //     console.log(event.target.value);\n  //     this.setState({password:event.target.value})\n  // }\n\n\n  loginClicked() {\n    //sept,dummy\n    // if(this.state.username==='sept' && this.state.password==='dummy'){\n    //     AuthenticationService.registerSuccessfulLogin(this.state.username,this.state.password)\n    //     this.props.history.push(`/welcome/${this.state.username}`)\n    //     //this.setState({showSuccessMessage:true})\n    //     //this.setState({hasLoginFailed:false})\n    // }\n    // else {\n    //     this.setState({showSuccessMessage:false})\n    //     this.setState({hasLoginFailed:true})\n    // }\n    // AuthenticationService\n    // .executeBasicAuthenticationService(this.state.username, this.state.password)\n    // .then(() => {\n    //     AuthenticationService.registerSuccessfulLogin(this.state.username,this.state.password)\n    //     this.props.history.push(`/welcome/${this.state.username}`)\n    // }).catch( () =>{\n    //     this.setState({showSuccessMessage:false})\n    //     this.setState({hasLoginFailed:true})\n    // })\n    AuthenticationService.executeJwtAuthenticationService(this.state.username, this.state.password).then(response => {\n      AuthenticationService.registerSuccessfulLoginForJwt(this.state.username, response.data.token);\n      this.props.history.push(\"/welcome/\".concat(this.state.username));\n    }).catch(() => {\n      this.setState({\n        showSuccessMessage: false\n      });\n      this.setState({\n        hasLoginFailed: true\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, this.state.hasLoginFailed && React.createElement(\"div\", {\n      className: \"alert alert-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Invalid Credentials or something is wrong\"), this.state.showSuccessMessage && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Login Sucessful\"), \"User Name: \", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), \"Password: \", React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: this.loginClicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Login\")));\n  }\n\n}\n\nexport default LoginComponent;","map":{"version":3,"sources":["/home/blahblah/Desktop/as1/Bananarama/frontend/todo-app/other/src/components/todo/LoginComponent.jsx"],"names":["React","Component","AuthenticationService","LoginComponent","constructor","props","state","username","password","hasLoginFailed","showSuccessMessage","handleChange","bind","loginClicked","event","setState","target","name","value","executeJwtAuthenticationService","then","response","registerSuccessfulLoginForJwt","data","token","history","push","catch","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport AuthenticationService from './AuthenticationService.js'\n\nclass LoginComponent extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            username: 'sept',\n            password: '',\n            hasLoginFailed: false,\n            showSuccessMessage: false\n        }\n        // this.handleUsernameChange = this.handleUsernameChange.bind(this)\n        // this.handlePasswordChange = this.handlePasswordChange.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n        this.loginClicked = this.loginClicked.bind(this)\n    }\n\n    handleChange(event) {\n        //console.log(this.state);\n        this.setState(\n            {\n                [event.target.name]\n                    : event.target.value\n            }\n        )\n    }\n\n    // handleUsernameChange(event) {\n    //     console.log(event.target.name);\n    //     this.setState(\n    //         {\n    //             [event.target.name]\n    //               :event.target.value\n    //         }\n    //     )\n    // }\n\n    // handlePasswordChange(event) {\n    //     console.log(event.target.value);\n    //     this.setState({password:event.target.value})\n    // }\n\n    loginClicked() {\n        //sept,dummy\n        // if(this.state.username==='sept' && this.state.password==='dummy'){\n        //     AuthenticationService.registerSuccessfulLogin(this.state.username,this.state.password)\n        //     this.props.history.push(`/welcome/${this.state.username}`)\n        //     //this.setState({showSuccessMessage:true})\n        //     //this.setState({hasLoginFailed:false})\n        // }\n        // else {\n        //     this.setState({showSuccessMessage:false})\n        //     this.setState({hasLoginFailed:true})\n        // }\n\n        // AuthenticationService\n        // .executeBasicAuthenticationService(this.state.username, this.state.password)\n        // .then(() => {\n        //     AuthenticationService.registerSuccessfulLogin(this.state.username,this.state.password)\n        //     this.props.history.push(`/welcome/${this.state.username}`)\n        // }).catch( () =>{\n        //     this.setState({showSuccessMessage:false})\n        //     this.setState({hasLoginFailed:true})\n        // })\n        AuthenticationService\n            .executeJwtAuthenticationService(this.state.username, this.state.password)\n            .then((response) => {\n                AuthenticationService.registerSuccessfulLoginForJwt(this.state.username, response.data.token)\n                this.props.history.push(`/welcome/${this.state.username}`)\n            }).catch(() => {\n                this.setState({ showSuccessMessage: false })\n                this.setState({ hasLoginFailed: true })\n            })\n\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Login</h1>\n                <div className=\"container\">\n                    {/*<ShowInvalidCredentials hasLoginFailed={this.state.hasLoginFailed}/>*/}\n                    {this.state.hasLoginFailed && <div className=\"alert alert-warning\">Invalid Credentials or something is wrong</div>}\n                    {this.state.showSuccessMessage && <div>Login Sucessful</div>}\n                    {/*<ShowLoginSuccessMessage showSuccessMessage={this.state.showSuccessMessage}/>*/}\n                    User Name: <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\n                    Password: <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n                    <button className=\"btn btn-success\" onClick={this.loginClicked}>Login</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default LoginComponent"]},"metadata":{},"sourceType":"module"}