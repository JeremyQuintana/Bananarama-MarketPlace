{"ast":null,"code":"var _jsxFileName = \"/home/blahblah/Downloads/bamarket/frontend/todo-app/src/components/market/PostComponent.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from \"react-router-dom\";\nimport MarketComponent from \"./MarketComponent.jsx\";\nimport MarketDataService from \"../../api/market/MarketDataService.js\";\nvar allPostings = [[\"1\", \"Confetti\", \"Beautiful multicolored confetti. Used but like new.\", \"georgemichael99\", \"$20\"], [\"2\", \"Green Capsicum\", \"Giant green capsicum. Found it at the beach. Still contains some sand.\", \"DONNYT1946\", \"$100\"], [\"3\", \"Small Blue Star\", \"Blue star, fell from the sky into my backyard. Fits in pocket. Still warm.\", \"not_an_alien\", \"$0.50\"], [\"4\", \"Vines - 50ft\", \"Green climbing vines. Organic, just cut. Perfect for a wedding.\", \"tree_hater\", \"$25.47\"]];\n\nclass PostComponent extends Component {\n  constructor(props) {\n    super(props); //this.allPostings = allPostings;\n\n    this.state = {\n      backPostings: [[]] // backPostings: allPostings,\n\n    };\n    this.refreshPosts(); // console.log(\"HELLO\");\n    // console.log(\"hello\" + this.state.backPostings);\n    // console.log(\"hello\")\n  }\n\n  render() {\n    let retVal;\n\n    if (parseInt(this.props.match.params.postID) - 1 < this.state.backPostings.length && parseInt(this.props.match.params.postID) - 1 >= 0) {\n      retVal = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"marketTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, this.state.backPostings[parseInt(this.props.match.params.postID) - 1][1]), React.createElement(\"div\", {\n        className: \"container postDescription\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: '../post_images/' + this.state.backPostings[parseInt(this.props.match.params.postID) - 1][0] + '.jpg',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), this.state.backPostings[parseInt(this.props.match.params.postID) - 1][2]), React.createElement(\"div\", {\n        className: \"container postPrice\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, this.state.backPostings[parseInt(this.props.match.params.postID) - 1][4]), React.createElement(\"div\", {\n        className: \"container postSeller\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, this.state.backPostings[parseInt(this.props.match.params.postID) - 1][3]), React.createElement(\"div\", {\n        className: \"container postSeller\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"chat/seller1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Contact Seller\")));\n    } else {\n      retVal = null;\n    }\n\n    return retVal;\n  }\n\n  refreshPosts() {\n    this.allPostings = MarketDataService.retrieveAllPosts().then(response => {\n      //console.log(response.data);\n      this.setState({\n        backPostings: response.data\n      });\n    }).catch(error => console.log(\"network error\"));\n  }\n\n}\n\nexport default PostComponent;","map":{"version":3,"sources":["/home/blahblah/Downloads/bamarket/frontend/todo-app/src/components/market/PostComponent.jsx"],"names":["React","Component","Link","withRouter","MarketComponent","MarketDataService","allPostings","PostComponent","constructor","props","state","backPostings","refreshPosts","render","retVal","parseInt","match","params","postID","length","retrieveAllPosts","then","response","setState","data","catch","error","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { withRouter } from \"react-router-dom\";\nimport MarketComponent from \"./MarketComponent.jsx\";\nimport MarketDataService from \"../../api/market/MarketDataService.js\"\n\nvar allPostings = [\n    [\"1\", \"Confetti\", \"Beautiful multicolored confetti. Used but like new.\", \"georgemichael99\", \"$20\"],\n    [\"2\", \"Green Capsicum\", \"Giant green capsicum. Found it at the beach. Still contains some sand.\", \"DONNYT1946\", \"$100\"],\n    [\"3\", \"Small Blue Star\", \"Blue star, fell from the sky into my backyard. Fits in pocket. Still warm.\", \"not_an_alien\", \"$0.50\"],\n    [\"4\", \"Vines - 50ft\", \"Green climbing vines. Organic, just cut. Perfect for a wedding.\", \"tree_hater\", \"$25.47\"]\n];\n\nclass PostComponent extends Component {\n\n\n    constructor(props) {\n        super(props);\n        //this.allPostings = allPostings;\n        \n        \n        this.state = {\n            backPostings: [[]],\n            // backPostings: allPostings,\n        }\n        this.refreshPosts()\n        // console.log(\"HELLO\");\n        // console.log(\"hello\" + this.state.backPostings);\n        // console.log(\"hello\")\n    }\n\n    render() {\n        let retVal;\n        if (parseInt(this.props.match.params.postID) - 1 < this.state.backPostings.length && parseInt(this.props.match.params.postID) - 1 >= 0) {\n            retVal = (\n\n                <div>\n                    <h1 className=\"marketTitle\">{this.state.backPostings[parseInt(this.props.match.params.postID) - 1][1]}</h1>\n                    <div className=\"container postDescription\">\n                        <img src={'../post_images/' + this.state.backPostings[parseInt(this.props.match.params.postID) - 1][0] + '.jpg'}></img>\n                        {this.state.backPostings[parseInt(this.props.match.params.postID) - 1][2]}\n                    </div>\n                    <div className=\"container postPrice\">\n                        {this.state.backPostings[parseInt(this.props.match.params.postID) - 1][4]}\n                    </div>\n                    <div className=\"container postSeller\">\n                        {this.state.backPostings[parseInt(this.props.match.params.postID) - 1][3]}\n                    </div>\n                    <div className=\"container postSeller\"><Link to=\"chat/seller1\">Contact Seller</Link></div>\n\n\n                </div>\n            );\n        } else {\n            retVal = null;\n        }\n\n        return retVal;\n    }\n\n    refreshPosts() {\n\n        this.allPostings = MarketDataService.retrieveAllPosts().then(\n            response => {\n                //console.log(response.data);\n                this.setState({ backPostings: response.data })\n            }\n        ).catch(error => console.log(\"network error\"));\n    }\n\n}\n\n\n\n\nexport default PostComponent"]},"metadata":{},"sourceType":"module"}